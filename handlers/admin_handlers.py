# handlers/admin_handlers.py
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder, InlineKeyboardButton
from aiogram.utils.markdown import hbold, hcode, hlink

import logging

from config import ADMIN_IDS, ORDER_STATUS_MAP  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
from db import get_all_orders, get_order_by_id, update_order_status
from models import Order, HelpMessage # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏

logger = logging.getLogger(__name__)

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ –∫–æ–ª–ª–±—ç–∫–æ–≤ –∞–¥–º–∏–Ω–æ–≤
admin_router = Router()


class AdminHandlers:
    """
    –ö–ª–∞—Å—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
    """

    @staticmethod
    def _escape_markdown_v2(text: str) -> str:
        """
        –≠–∫—Ä–∞–Ω–∏—Ä—É–µ—Ç –¢–û–õ–¨–ö–û –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã MarkdownV2 –≤ —Ç–µ–∫—Å—Ç–µ,
        —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫ –ø–∞—Ä—Å–∏–Ω–≥–∞ Telegram, —Å–æ—Ö—Ä–∞–Ω—è—è –ø—Ä–∏ —ç—Ç–æ–º —á–∏—Ç–∞–µ–º–æ—Å—Ç—å.
        –ü—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–º—É –≤–≤–æ–¥—É, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –±—É–¥–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω Markdown.
        """
        if text is None:
            return ""

        # –ü–µ—Ä–µ—á–µ–Ω—å —Å–∏–º–≤–æ–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û –Ω—É–∂–Ω–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≤ MarkdownV2,
        # –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø–æ –ø—Ä—è–º–æ–º—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—é –≤ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–µ.
        # –ù–∞–ø—Ä–∏–º–µ—Ä, '_' - –¥–ª—è –∫—É—Ä—Å–∏–≤–∞, '*' - –¥–ª—è –∂–∏—Ä–Ω–æ–≥–æ, '[' –∏ ']' - –¥–ª—è —Å—Å—ã–ª–æ–∫ –∏ —Ç.–¥.
        # –¢–æ—á–∫–∞ '.', –ø–ª—é—Å '+', –º–∏–Ω—É—Å '-' –∏ —Ç.–ø. –æ–±—ã—á–Ω–æ –ù–ï —Ç—Ä–µ–±—É—é—Ç —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –æ–±—ã—á–Ω–æ–º —Ç–µ–∫—Å—Ç–µ.
        # –°–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —á–∞—Å—Ç–æ –≤—ã–∑—ã–≤–∞—é—Ç –ø—Ä–æ–±–ª–µ–º—ã: _ * [ ] ( ) ~ ` > # = | { } !
        # –Ø —Ç–∞–∫–∂–µ –¥–æ–±–∞–≤–∏–ª '.' –∏ '-' –æ–±—Ä–∞—Ç–Ω–æ, –µ—Å–ª–∏ –æ–Ω–∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –º–æ–≥—É—Ç –±—ã—Ç—å –≤ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–æ–∫–∏
        # –∏ –±—ã—Ç—å —á–∞—Å—Ç—å—é —Å–ø–∏—Å–∫–æ–≤, –Ω–æ —ç—Ç–æ –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–π —Å–ª—É—á–∞–π. –î–ª—è –∞–¥—Ä–µ—Å–∞ –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        # –æ–Ω–∏ –Ω–µ –¥–æ–ª–∂–Ω—ã –≤—ã–∑—ã–≤–∞—Ç—å –ø—Ä–æ–±–ª–µ–º.

        # –î–∞–≤–∞–π —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏–º—Å—è –Ω–∞ —Ç–µ—Ö, —á—Ç–æ –°–¢–û–ü–†–û–¶–ï–ù–¢–ù–û –≤—ã–∑—ã–≤–∞—é—Ç –ø—Ä–æ–±–ª–µ–º—ã
        # –∏ –∫–æ—Ç–æ—Ä—ã–µ AIOGRAM_MD_V2.escape –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–ª—è –æ–±—â–µ–≥–æ —Ç–µ–∫—Å—Ç–∞.

        # –í–æ—Ç —Å–ø–∏—Å–æ–∫, –∫–æ—Ç–æ—Ä—ã–π Aiogram —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç –¥–ª—è –û–ë–©–ï–ì–û escape:
        # _ * [ ] ( ) ~ ` > # + - = | { } . !

        # –ù–æ –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –ü–û–õ–ï–ô (–∞–¥—Ä–µ—Å, —Ç–µ–ª–µ—Ñ–æ–Ω), –≥–¥–µ –Ω–µ—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è,
        # –ø—Ä–æ–±–ª–µ–º—ã –≤—ã–∑—ã–≤–∞—é—Ç —Ç–æ–ª—å–∫–æ: _ * [ ] ( ) ~ ` > # | { } !
        # '+' –∏ '-' - —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –Ω–∞—á–∞–ª–æ —Å–ø–∏—Å–∫–∞.
        # '.' - —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç—Ç–æ –≤ –∫–æ–Ω—Ü–µ –Ω–æ–º–µ—Ä–∞ —Å–ø–∏—Å–∫–∞.

        # –ò—Å–ø—Ä–∞–≤–∏–º –Ω–∞ –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–π –Ω–∞–±–æ—Ä –¥–ª—è "–±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ" —Ç–µ–∫—Å—Ç–∞:
        # –£–±–µ—Ä–µ–º `.` –∏ `+` –∏ `-`, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∏ —á–∞—â–µ –≤—Å–µ–≥–æ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –≤ –∞–¥—Ä–µ—Å–∞—Ö/—Ç–µ–ª–µ—Ñ–æ–Ω–∞—Ö
        # –∏ –Ω–µ –≤—ã–∑—ã–≤–∞—é—Ç –ø—Ä–æ–±–ª–µ–º, –µ—Å–ª–∏ –Ω–µ —è–≤–ª—è—é—Ç—Å—è —á–∞—Å—Ç—å—é Markdown —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–∞—á–∞–ª–æ —Å–ø–∏—Å–∫–∞).

        # –û—Å—Ç–∞–≤–∏–º —Ç–æ–ª—å–∫–æ —Ç–µ, –∫–æ—Ç–æ—Ä—ã–µ —Ç–æ—á–Ω–æ –ª–æ–º–∞—é—Ç —Ä–∞–∑–º–µ—Ç–∫—É –≤ —Å–µ—Ä–µ–¥–∏–Ω–µ —Å–ª–æ–≤–∞:
        # _ * [ ] ( ) ~ ` > # | { } !

        # –ï—Å–ª–∏ Telegram –≤—Å–µ –µ—â–µ —Ä—É–≥–∞–µ—Ç—Å—è, –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –≤–µ—Ä–Ω—É—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –Ω–∏—Ö.
        # –î–ª—è –∞–¥—Ä–µ—Å–∞: '.', '-', '(', ')', ',' –º–æ–≥—É—Ç –±—ã—Ç—å.
        # –î–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞: '+', '-', '(', ')'

        # –ü–æ–ø—Ä–æ–±—É–µ–º –±–æ–ª–µ–µ –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –∏ –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –Ω–∞–±–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–µ–Ω –¥–ª—è –ø–æ–ª–µ–π,
        # —Ç–∞–∫–∏—Ö –∫–∞–∫ –§–ò–û, –∞–¥—Ä–µ—Å, —Ç–µ–ª–µ—Ñ–æ–Ω, –≥–¥–µ –º—ã –Ω–µ –æ–∂–∏–¥–∞–µ–º —Å–ª–æ–∂–Ω–æ–≥–æ Markdown,
        # –Ω–æ —Ö–æ—Ç–∏–º –∏–∑–±–µ–∂–∞—Ç—å –ø–æ–ª–æ–º–æ–∫ –æ—Ç –æ–¥–∏–Ω–æ—á–Ω—ã—Ö —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–æ–≤.

        special_chars_to_escape = ['_', '*', '[', ']', '(', ')', '~', '`', '>', '#', '=', '|', '{', '}', '!', '.']
        # –Ø –≤–µ—Ä–Ω—É–ª —Ç–æ—á–∫—É '.' –æ–±—Ä–∞—Ç–Ω–æ, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–±–ª–µ–º–æ–π –≤ –∏–º–µ–Ω–∞—Ö —Ñ–∞–π–ª–æ–≤
        # –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –Ω–µ–æ–±—ã—á–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö. –°–∏–º–≤–æ–ª '+' –∏ '-' –ø–æ–∫–∞ –æ—Å—Ç–∞–≤–∏–º –±–µ–∑ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è,
        # —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∏ —á–∞—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∞—é—Ç—Å—è –≤ —Ç–µ–ª–µ—Ñ–æ–Ω–∞—Ö –∏ –∞–¥—Ä–µ—Å–∞—Ö, –∏ —Ä–µ–¥–∫–æ –ª–æ–º–∞—é—Ç Markdown
        # –µ—Å–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ø–∏—Å–∫–æ–≤.

        for char in special_chars_to_escape:
            text = text.replace(char, f'\\{char}')
        return text

    @admin_router.message(Command("admin"))
    async def admin_command(message: Message):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /admin.
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º, –∏ –µ—Å–ª–∏ –¥–∞,
        –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–¥–º–∏–Ω—Å–∫–æ–µ –º–µ–Ω—é.
        """
        if message.from_user.id not in ADMIN_IDS:
            logger.warning(f"–ü–æ–ø—ã—Ç–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ –æ—Ç –Ω–µ–∞–¥–º–∏–Ω–∞: {message.from_user.id}")
            await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.")
            return

        logger.info(f"–ê–¥–º–∏–Ω {message.from_user.id} –≤–æ—à–µ–ª –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å.")

        keyboard = InlineKeyboardBuilder()
        keyboard.button(text="–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∑–∞–∫–∞–∑—ã üìã", callback_data="admin_view_all_orders")
        keyboard.button(text="–ù–∞–π—Ç–∏ –∑–∞–∫–∞–∑—ã üîç", callback_data="admin_find_orders")
        keyboard.button(text="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–º–æ—â—å—é üí¨", callback_data="admin_manage_help_messages")
        keyboard.adjust(1)  # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ –æ–¥–Ω–æ–π –≤ —Ä—è–¥

        await message.answer(
            "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            reply_markup=keyboard.as_markup()
        )

    @admin_router.callback_query(F.data == "admin_view_all_orders")
    async def admin_view_all_orders_callback(callback: CallbackQuery):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∑–∞–∫–∞–∑—ã".
        –¢–µ–ø–µ—Ä—å –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞.
        """
        if callback.from_user.id not in ADMIN_IDS:
            await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤.")
            return

        logger.info(f"–ê–¥–º–∏–Ω {callback.from_user.id} –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –≤—Å–µ –∑–∞–∫–∞–∑—ã.")

        orders_text = "**–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã:**\n\n"
        orders = await get_all_orders(limit=10)  # –ü–æ–∫–∞–∂–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –Ω–∞—á–∞–ª–∞

        if orders:
            keyboard = InlineKeyboardBuilder()
            for order in orders:
                display_status = ORDER_STATUS_MAP.get(order.status, order.status)

                escaped_username = AdminHandlers._escape_markdown_v2(order.username or 'N/A')
                # –¢–µ–ø–µ—Ä—å order_text[:40] —Ç–æ–∂–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω,
                # –µ—Å–ª–∏ –º—ã –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º hcode –¥–ª—è –Ω–µ–≥–æ.
                # –ü–æ—Å–∫–æ–ª—å–∫—É –º—ã –µ–≥–æ –Ω–µ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º, _escape_markdown_v2 –∑–¥–µ—Å—å –Ω—É–∂–µ–Ω!
                escaped_order_text_preview = AdminHandlers._escape_markdown_v2(order.order_text[:40])

                orders_text += (
                    f"ID: {order.id} | –û—Ç: {escaped_username} | –°—Ç–∞—Ç—É—Å: {display_status}\n"
                    f"  _–¢–µ–∫—Å—Ç:_ {escaped_order_text_preview}...\n\n"
                )
                # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ–¥—Ä–æ–±–Ω–µ–µ" –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–∫–∞–∑–∞
                keyboard.add(InlineKeyboardButton(
                    text=f"üëÅÔ∏è –ó–∞–∫–∞–∑ ‚Ññ{order.id}",
                    callback_data=f"view_order_{order.id}"
                ))
            keyboard.adjust(2)  # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ 2 –≤ —Ä—è–¥

            await callback.message.edit_text(
                orders_text,
                reply_markup=keyboard.as_markup(),
                parse_mode="Markdown"
            )
        else:
            await callback.message.edit_text("–ó–∞–∫–∞–∑–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç.")

        await callback.answer()

    @classmethod
    @admin_router.callback_query(F.data.startswith("view_order_"))
    async def admin_view_order_details_callback(callback: CallbackQuery):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ "–ó–∞–∫–∞–∑ #ID" –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–∫–∞–∑–∞.
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–µ –∏ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞.
        """
        if callback.from_user.id not in ADMIN_IDS:
            await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤.")
            return

        order_id = int(callback.data.split("_")[2])
        logger.info(f"–ê–¥–º–∏–Ω {callback.from_user.id} –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞–µ—Ç –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞ ID {order_id}.")

        order = await get_order_by_id(order_id)

        if order:
            display_status = ORDER_STATUS_MAP.get(order.status, order.status)
            order_details_text = (
                f"**–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞ ‚Ññ{order.id}**\n\n"
                f"**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {AdminHandlers._escape_markdown_v2(order.username or 'N/A')} ({order.user_id})\n"
                f"**–°—Ç–∞—Ç—É—Å:** {display_status}\n"
                f"**–¢–µ–∫—Å—Ç –∑–∞–∫–∞–∑–∞:**\n{hcode(order.order_text)}\n"  # <-- order_text –ë–ï–ó _escape_markdown_v2()
                f"**–§–ò–û:** {AdminHandlers._escape_markdown_v2(order.full_name or '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}\n"
                f"**–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:** {AdminHandlers._escape_markdown_v2(order.delivery_address or '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
                f"**–ú–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç—ã:** {AdminHandlers._escape_markdown_v2(order.payment_method or '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
                f"**–¢–µ–ª–µ—Ñ–æ–Ω:** {AdminHandlers._escape_markdown_v2(order.contact_phone or '–ù–µ —É–∫–∞–∑–∞–Ω')}\n"
                f"**–ü—Ä–∏–º–µ—á–∞–Ω–∏—è:** {AdminHandlers._escape_markdown_v2(order.delivery_notes or '–ù–µ—Ç')}\n"
                f"**–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è:** {order.created_at.strftime('%d.%m.%Y %H:%M:%S')}\n"
            )

            # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
            status_keyboard = InlineKeyboardBuilder()
            for status_key, status_value in ORDER_STATUS_MAP.items():
                # –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∫–∞–∫ –æ–ø—Ü–∏—é –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ —Å–µ–±—è –∂–µ
                if status_key != order.status:
                    status_keyboard.add(InlineKeyboardButton(
                        text=f"üîÑ {status_value}",
                        callback_data=f"admin_change_status:{order.id}_{status_key}"
                    ))
            status_keyboard.add(InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –∑–∞–∫–∞–∑–∞–º",
                callback_data="admin_view_all_orders"
            ))
            status_keyboard.adjust(2)  # –†–∞–∑–º–µ—â–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ 2 –≤ —Ä—è–¥

            await callback.message.edit_text(
                order_details_text,
                reply_markup=status_keyboard.as_markup(),
                parse_mode="Markdown"
            )
        else:
            await callback.message.edit_text("–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω.")

        await callback.answer()

    @admin_router.callback_query(F.data.startswith("admin_change_status:"))
    async def admin_change_order_status_callback(callback: CallbackQuery):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞.
        """
        if callback.from_user.id not in ADMIN_IDS:
            await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤.")
            return

        parts = callback.data.split("_")
        order_id = int(parts[3])
        new_status = parts[4]

        logger.info(f"–ê–¥–º–∏–Ω {callback.from_user.id} –º–µ–Ω—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ ID {order_id} –Ω–∞ '{new_status}'.")

        updated_order = await update_order_status(order_id, new_status)

        if updated_order:
            # –ü–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –¥–µ—Ç–∞–ª—å–Ω–æ–º—É –ø—Ä–æ—Å–º–æ—Ç—Ä—É —ç—Ç–æ–≥–æ –∂–µ –∑–∞–∫–∞–∑–∞
            # –ò–ª–∏ –∫ —Å–ø–∏—Å–∫—É –≤—Å–µ—Ö –∑–∞–∫–∞–∑–æ–≤
            display_status = ORDER_STATUS_MAP.get(updated_order.status, updated_order.status)
            await callback.answer(f"–°—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ ‚Ññ{order_id} –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ '{display_status}'!", show_alert=True)
            # –í—ã–∑—ã–≤–∞–µ–º —Ç–æ—Ç –∂–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            await AdminHandlers.admin_view_order_details_callback(callback)  # –ü–µ—Ä–µ–¥–∞–µ–º —Ç–æ—Ç –∂–µ callback, —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
        else:
            await callback.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞. –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω.", show_alert=True)
            await callback.message.edit_text("–û—à–∏–±–∫–∞: –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω.")

    @admin_router.callback_query(F.data == "admin_find_orders")
    async def admin_find_orders_callback(callback: CallbackQuery):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ "–ù–∞–π—Ç–∏ –∑–∞–∫–∞–∑—ã".
        """
        if callback.from_user.id not in ADMIN_IDS:
            await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤.")
            return

        logger.info(f"–ê–¥–º–∏–Ω {callback.from_user.id} –Ω–∞–∂–∞–ª '–ù–∞–π—Ç–∏ –∑–∞–∫–∞–∑—ã'.")
        await callback.message.edit_text("–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–æ–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤. –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.")
        await callback.answer()

    @admin_router.callback_query(F.data == "admin_manage_help_messages")
    async def admin_manage_help_messages_callback(callback: CallbackQuery):
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–º–æ—â—å—é".
        """
        if callback.from_user.id not in ADMIN_IDS:
            await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤.")
            return

        logger.info(f"–ê–¥–º–∏–Ω {callback.from_user.id} –Ω–∞–∂–∞–ª '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–º–æ—â—å—é'.")
        keyboard = InlineKeyboardBuilder()
        keyboard.button(text="–°–æ–∑–¥–∞—Ç—å/–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ ‚úèÔ∏è", callback_data="admin_create_edit_help")
        keyboard.button(text="–í—ã–±—Ä–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚úÖ", callback_data="admin_select_active_help")
        keyboard.button(text="–ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å üîô", callback_data="admin_panel_back")
        keyboard.adjust(1)

        await callback.message.edit_text(
            "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –ø–æ–º–æ—â–∏:",
            reply_markup=keyboard.as_markup()
        )
        await callback.answer()

    # TODO: –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –≤—ã–±–æ—Ä–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–º–æ—â–∏

    @admin_router.callback_query(F.data == "admin_panel_back")
    async def admin_panel_back_callback(callback: CallbackQuery):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞–¥–º–∏–Ω–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.
        """
        if callback.from_user.id not in ADMIN_IDS:
            await callback.answer("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤.")
            return

        await AdminHandlers.admin_command(callback.message)  # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
        await callback.answer()